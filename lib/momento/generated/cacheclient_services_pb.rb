# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: cacheclient.proto for package 'cache_client'

require 'grpc'
require_relative 'cacheclient_pb'

module MomentoProtos
  module CacheClient
    module Scs
      class Service
        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'cache_client.Scs'

        rpc :Get, ::MomentoProtos::CacheClient::PB__GetRequest, ::MomentoProtos::CacheClient::PB__GetResponse
        rpc :GetBatch, ::MomentoProtos::CacheClient::PB__GetBatchRequest, stream(::MomentoProtos::CacheClient::PB__GetResponse)
        rpc :Set, ::MomentoProtos::CacheClient::PB__SetRequest, ::MomentoProtos::CacheClient::PB__SetResponse
        rpc :SetBatch, ::MomentoProtos::CacheClient::PB__SetBatchRequest, stream(::MomentoProtos::CacheClient::PB__SetResponse)
        rpc :SetIf, ::MomentoProtos::CacheClient::PB__SetIfRequest, ::MomentoProtos::CacheClient::PB__SetIfResponse
        # Deprecated because we have SetIf - Absent to cover this case.
        rpc :SetIfNotExists, ::MomentoProtos::CacheClient::PB__SetIfNotExistsRequest, ::MomentoProtos::CacheClient::PB__SetIfNotExistsResponse
        rpc :Delete, ::MomentoProtos::CacheClient::PB__DeleteRequest, ::MomentoProtos::CacheClient::PB__DeleteResponse
        rpc :KeysExist, ::MomentoProtos::CacheClient::PB__KeysExistRequest, ::MomentoProtos::CacheClient::PB__KeysExistResponse
        rpc :Increment, ::MomentoProtos::CacheClient::PB__IncrementRequest, ::MomentoProtos::CacheClient::PB__IncrementResponse
        rpc :UpdateTtl, ::MomentoProtos::CacheClient::PB__UpdateTtlRequest, ::MomentoProtos::CacheClient::PB__UpdateTtlResponse
        rpc :ItemGetTtl, ::MomentoProtos::CacheClient::PB__ItemGetTtlRequest, ::MomentoProtos::CacheClient::PB__ItemGetTtlResponse
        rpc :ItemGetType, ::MomentoProtos::CacheClient::PB__ItemGetTypeRequest, ::MomentoProtos::CacheClient::PB__ItemGetTypeResponse
        rpc :DictionaryGet, ::MomentoProtos::CacheClient::PB__DictionaryGetRequest, ::MomentoProtos::CacheClient::PB__DictionaryGetResponse
        rpc :DictionaryFetch, ::MomentoProtos::CacheClient::PB__DictionaryFetchRequest, ::MomentoProtos::CacheClient::PB__DictionaryFetchResponse
        rpc :DictionarySet, ::MomentoProtos::CacheClient::PB__DictionarySetRequest, ::MomentoProtos::CacheClient::PB__DictionarySetResponse
        rpc :DictionaryIncrement, ::MomentoProtos::CacheClient::PB__DictionaryIncrementRequest, ::MomentoProtos::CacheClient::PB__DictionaryIncrementResponse
        rpc :DictionaryDelete, ::MomentoProtos::CacheClient::PB__DictionaryDeleteRequest, ::MomentoProtos::CacheClient::PB__DictionaryDeleteResponse
        rpc :DictionaryLength, ::MomentoProtos::CacheClient::PB__DictionaryLengthRequest, ::MomentoProtos::CacheClient::PB__DictionaryLengthResponse
        rpc :SetFetch, ::MomentoProtos::CacheClient::PB__SetFetchRequest, ::MomentoProtos::CacheClient::PB__SetFetchResponse
        rpc :SetSample, ::MomentoProtos::CacheClient::PB__SetSampleRequest, ::MomentoProtos::CacheClient::PB__SetSampleResponse
        rpc :SetUnion, ::MomentoProtos::CacheClient::PB__SetUnionRequest, ::MomentoProtos::CacheClient::PB__SetUnionResponse
        rpc :SetDifference, ::MomentoProtos::CacheClient::PB__SetDifferenceRequest, ::MomentoProtos::CacheClient::PB__SetDifferenceResponse
        rpc :SetContains, ::MomentoProtos::CacheClient::PB__SetContainsRequest, ::MomentoProtos::CacheClient::PB__SetContainsResponse
        rpc :SetLength, ::MomentoProtos::CacheClient::PB__SetLengthRequest, ::MomentoProtos::CacheClient::PB__SetLengthResponse
        rpc :SetPop, ::MomentoProtos::CacheClient::PB__SetPopRequest, ::MomentoProtos::CacheClient::PB__SetPopResponse
        rpc :ListPushFront, ::MomentoProtos::CacheClient::PB__ListPushFrontRequest, ::MomentoProtos::CacheClient::PB__ListPushFrontResponse
        rpc :ListPushBack, ::MomentoProtos::CacheClient::PB__ListPushBackRequest, ::MomentoProtos::CacheClient::PB__ListPushBackResponse
        rpc :ListPopFront, ::MomentoProtos::CacheClient::PB__ListPopFrontRequest, ::MomentoProtos::CacheClient::PB__ListPopFrontResponse
        rpc :ListPopBack, ::MomentoProtos::CacheClient::PB__ListPopBackRequest, ::MomentoProtos::CacheClient::PB__ListPopBackResponse
        rpc :ListErase, ::MomentoProtos::CacheClient::PB__ListEraseRequest, ::MomentoProtos::CacheClient::PB__ListEraseResponse
        rpc :ListRemove, ::MomentoProtos::CacheClient::PB__ListRemoveRequest, ::MomentoProtos::CacheClient::PB__ListRemoveResponse
        rpc :ListFetch, ::MomentoProtos::CacheClient::PB__ListFetchRequest, ::MomentoProtos::CacheClient::PB__ListFetchResponse
        rpc :ListLength, ::MomentoProtos::CacheClient::PB__ListLengthRequest, ::MomentoProtos::CacheClient::PB__ListLengthResponse
        rpc :ListConcatenateFront, ::MomentoProtos::CacheClient::PB__ListConcatenateFrontRequest, ::MomentoProtos::CacheClient::PB__ListConcatenateFrontResponse
        rpc :ListConcatenateBack, ::MomentoProtos::CacheClient::PB__ListConcatenateBackRequest, ::MomentoProtos::CacheClient::PB__ListConcatenateBackResponse
        rpc :ListRetain, ::MomentoProtos::CacheClient::PB__ListRetainRequest, ::MomentoProtos::CacheClient::PB__ListRetainResponse
        # Sorted Set Operations
        # A sorted set is a collection of elements ordered by their score.
        # The elements with same score are ordered lexicographically.
        #
        # Add or Updates new element with its score to the Sorted Set.
        # If sorted set doesn't exist, a new one is created with the specified
        # element and its associated score.
        # If an element exists, then its associate score gets overridden with the one
        # provided in this operation.
        rpc :SortedSetPut, ::MomentoProtos::CacheClient::PB__SortedSetPutRequest, ::MomentoProtos::CacheClient::PB__SortedSetPutResponse
        # Fetches a subset of elements in the sorted set.
        rpc :SortedSetFetch, ::MomentoProtos::CacheClient::PB__SortedSetFetchRequest, ::MomentoProtos::CacheClient::PB__SortedSetFetchResponse
        # Gets the specified element and its associated score if it exists in the
        # sorted set.
        rpc :SortedSetGetScore, ::MomentoProtos::CacheClient::PB__SortedSetGetScoreRequest, ::MomentoProtos::CacheClient::PB__SortedSetGetScoreResponse
        # Removes specified elements and their associated scores
        rpc :SortedSetRemove, ::MomentoProtos::CacheClient::PB__SortedSetRemoveRequest, ::MomentoProtos::CacheClient::PB__SortedSetRemoveResponse
        # Changes the score associated with the element by specified amount.
        # If the provided amount is negative, then the score associated with the
        # element is decremented.
        # If the element that needs to be incremented isn't present in the sorted
        # set, it is added with specified number as the score.
        # If the set itself doesn't exist then a new one with specified element and
        # score is created.
        rpc :SortedSetIncrement, ::MomentoProtos::CacheClient::PB__SortedSetIncrementRequest, ::MomentoProtos::CacheClient::PB__SortedSetIncrementResponse
        # Gives the rank of an element.
        rpc :SortedSetGetRank, ::MomentoProtos::CacheClient::PB__SortedSetGetRankRequest, ::MomentoProtos::CacheClient::PB__SortedSetGetRankResponse
        # Returns length of the sorted set
        rpc :SortedSetLength, ::MomentoProtos::CacheClient::PB__SortedSetLengthRequest, ::MomentoProtos::CacheClient::PB__SortedSetLengthResponse
        # Returns number of elements in the sorted set between a given min and max score
        rpc :SortedSetLengthByScore, ::MomentoProtos::CacheClient::PB__SortedSetLengthByScoreRequest, ::MomentoProtos::CacheClient::PB__SortedSetLengthByScoreResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
